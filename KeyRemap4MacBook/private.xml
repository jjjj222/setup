<?xml version="1.0"?>
<root>
    <item>
      <name>Disable Command + H</name>
      <identifier>private.no_command_h</identifier>
      <autogen>__KeyToKey__ KeyCode::H, VK_COMMAND | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
    </item>

    <item>
        <name>Vim Move</name>
        <identifier>private.vim_move</identifier>
        <appendix>Map Fn + H/J/K/L to Arrows</appendix>
        <autogen>
            __KeyToKey__
            KeyCode::J,
            ModifierFlag::FN,
            KeyCode::CURSOR_DOWN
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::K,
            ModifierFlag::FN,
            KeyCode::CURSOR_UP
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::H,
            ModifierFlag::FN,
            KeyCode::CURSOR_LEFT
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::L,
            ModifierFlag::FN,
            KeyCode::CURSOR_RIGHT
        </autogen>
    </item>

    <item>
        <name>Switch Space</name>
        <identifier>private.switch_space</identifier>
        <appendix>Map Fn + ,/. to Alt + Left/Right</appendix>
        <autogen>
            __KeyToKey__
            KeyCode::COMMA, ModifierFlag::FN,
            KeyCode::CURSOR_LEFT, VK_OPTION
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::DOT, ModifierFlag::FN,
            KeyCode::CURSOR_RIGHT, VK_OPTION
        </autogen>
    </item>

    <appdef>
        <appname>anki</appname>
        <equal>net.ichi2.anki</equal>
    </appdef>

    <item>
        <name>Anki Hacks</name>
        <identifier>private.app_anki_ctrl_to_command</identifier>
        <appendix>Map Ctrl+C/X/V/F to Command+C/X/V/F and C+W/Q to ESC For Anki-1.2.8</appendix>
        <only>anki</only>
        <autogen>
            __KeyToKey__
            KeyCode::C, VK_CONTROL,
            KeyCode::C, VK_COMMAND
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::X, VK_CONTROL,
            KeyCode::X, VK_COMMAND
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::V, VK_CONTROL,
            KeyCode::V, VK_COMMAND
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::F, VK_CONTROL,
            KeyCode::F, VK_COMMAND
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::W, VK_COMMAND,
            KeyCode::ESCAPE
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::Q, VK_COMMAND,
            KeyCode::ESCAPE
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::F12,
            KeyCode::RETURN
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::F11,
            KeyCode::F5
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::F2,
            KeyCode::RETURN
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::F1,
            KeyCode::F5
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::A, VK_COMMAND,
            KeyCode::RETURN, VK_COMMAND,
        </autogen>
    </item>

    <appdef>
        <appname>Chrome</appname>
        <equal>com.google.Chrome</equal>
    </appdef>

    <item>
        <name>Chrome Hacks Disable Quit</name>
        <identifier>private.app_chrome_command_q_to_command_m</identifier>
        <appendix>Map Ctrl+Q to Ctrl+M For Chrome</appendix>
        <only>Chrome</only>
        <autogen>
            __KeyToKey__
            KeyCode::Q, VK_COMMAND,
            KeyCode::M, VK_COMMAND
        </autogen>
    </item>

    <item>
        <name>Chrome Hacks Map Ctrl Arrow</name>
        <identifier>private.app_chrome_control_arrow_to_command_option_arrow</identifier>
        <appendix>Map Ctrl+Left/Right For Chrome</appendix>
        <only>Chrome</only>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_LEFT, VK_CONTROL,
            KeyCode::CURSOR_LEFT, VK_COMMAND | VK_OPTION
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_RIGHT, VK_CONTROL,
            KeyCode::CURSOR_RIGHT, VK_COMMAND | VK_OPTION
        </autogen>
    </item>

    <appdef>
        <appname>DVDPlayer</appname>
        <equal>com.apple.DVDPlayer</equal>
    </appdef>

    <item>
        <name>DVDPlayer Hacks</name>
        <identifier>private.app_dvdplayer_arrow_to_back_5_second</identifier>
        <appendix>Map Arrow to Forward/Back 5 Seconds</appendix>
        <only>DVDPlayer</only>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_LEFT, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, VK_COMMAND | VK_OPTION
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_RIGHT, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, VK_COMMAND | VK_OPTION
        </autogen>
    </item>

    <appdef>
        <appname>iTunes</appname>
        <equal>com.apple.iTunes</equal>
    </appdef>

    <item>
        <name>iTunes Hacks</name>
        <identifier>private.app_itune_arrow_to_back_5_second</identifier>
        <appendix>Map Arrow to Forward/Back 5 Seconds</appendix>
        <only>iTunes</only>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_LEFT, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, VK_COMMAND | VK_OPTION
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::CURSOR_RIGHT, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, VK_COMMAND | VK_OPTION
        </autogen>
    </item>
</root>
